<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: windows | P. Taylor Goetz]]></title>
  <link href="http://ptgoetz.github.io/blog/categories/windows/atom.xml" rel="self"/>
  <link href="http://ptgoetz.github.io/"/>
  <updated>2013-12-18T23:42:54-05:00</updated>
  <id>http://ptgoetz.github.io/</id>
  <author>
    <name><![CDATA[P. Taylor Goetz]]></name>
    <email><![CDATA[ptgoetz@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Apache Storm on Windows]]></title>
    <link href="http://ptgoetz.github.io/blog/2013/12/18/running-apache-storm-on-windows/"/>
    <updated>2013-12-18T17:12:00-05:00</updated>
    <id>http://ptgoetz.github.io/blog/2013/12/18/running-apache-storm-on-windows</id>
    <content type="html"><![CDATA[<p>In the past, running Storm on Windows has been a challenge. While possible, it often involved hacking Storm's source, hunting down (or building from source) native dependencies, and mucking around with various ways to trick Windows into thinking it's like UNIX/POSIX.</p>

<p>That alienated a large number of potential adopters who stand to gain from integrating Storm into their big data strategy.</p>

<p>Thanks in large part to contributions from Storm committer <a href="https://github.com/davidlao2k">David Lao</a>, as well as <a href="http://yahooeng.tumblr.com/post/64758709722/making-storm-fly-with-netty">contributions from Yahoo!</a>, the next release of Storm (0.9.1-incubating) will make life much easier for users who want or need to deploy Storm in an environment where Windows is necessary.</p>

<p>Below I've listed the steps necessary to get storm up and running with a sample topology on Windows. It walks through the process of creating a single-node cluster (pseudo-cluster) and deploying a sample "Word Count" topology.</p>

<p><img src="/images/storm_ui.png" alt="" /></p>

<h3>Install Java</h3>

<p>Download and install a JDK (Storm works with both Oracle and OpenJDK 6/7). For this setup I used <a href="http://download.oracle.com/otn-pub/java/jdk/7u45-b18/jdk-7u45-windows-x64.exe">JDK 7 from Oracle</a>.</p>

<p>I installed Java in:</p>

<pre><code>C:\Java\jdk1.7.0_45\
</code></pre>

<h3>Install Python</h3>

<p>To test the installation, we'll be deploying the "word count" sample from the <a href="https://github.com/nathanmarz/storm-starter">storm-starter project</a> which uses a <a href="https://github.com/nathanmarz/storm/wiki/Multilang-protocol">multi-lang</a> bolt written in python. I used python 2.7.6 which can be downloaded <a href="http://www.python.org/download/">here</a>.</p>

<p>I installed python in:</p>

<pre><code>C:\Python27\
</code></pre>

<h3>Install and Run Zookeeper</h3>

<p><a href="http://download.nextag.com/apache/zookeeper/zookeeper-3.3.6/">Download Apache Zookeeper 3.3.6</a> and extract it. Configure and run Zookeeper with the following commands:</p>

<pre><code>&gt; cd zookeeper-3.3.6
&gt; copy conf\zoo_sample.cfg conf\zoo.cfg
&gt; .\bin\zkServer.cmd
</code></pre>

<h3>Install Storm</h3>

<p>The changes that allow Storm to run seamlessly on Windows have not been officially released yet, but you can download a build with those changes incorporated <a href="https://dl.dropboxusercontent.com/s/iglqz73chkul1tu/storm-0.9.1-incubating-SNAPSHOT-12182013.zip">here</a>.</p>

<p>(Source branch for that build can be found <a href="https://github.com/ptgoetz/incubator-storm/tree/windows-test">here</a>).</p>

<p>Extract that file to the location of your choice. I chose <code>C:\</code>.</p>

<h3>Configure Environment Variables</h3>

<p>On Windows Storm requires the <code>STORM_HOME</code> and <code>JAVA_HOME</code> environment variables to be set, as well as some additions to the <code>PATH</code> variable:</p>

<p><code>JAVA_HOME</code></p>

<pre><code>C:\Java\jdk1.7.0_45\
</code></pre>

<p><code>STORM_HOME</code></p>

<pre><code>C:\storm-0.9.1-incubating-SNAPSHOT-12182013\
</code></pre>

<p><code>PATH</code> Add:</p>

<pre><code>%STORM_HOME%\bin;%JAVA_HOME%\bin;C:\Python27;C:\Python27\Lib\site-packages\;C:\Python27\Scripts\;
</code></pre>

<p><code>PATHEXT</code> Add:</p>

<pre><code>.PY
</code></pre>

<h3>Start Nimbus, Supervisor, and Storm UI Daemons</h3>

<p>For each deamon, open a separate command prompt.</p>

<p><strong>Nimbus</strong></p>

<pre><code>&gt; cd %STORM_HOME%
&gt; storm nimbus
</code></pre>

<p><strong>Supervisor</strong></p>

<pre><code>&gt; cd %STORM_HOME%
&gt; storm supervisor
</code></pre>

<p><strong>Storm UI</strong></p>

<pre><code>&gt; cd %STORM_HOME%
&gt; storm ui
</code></pre>

<p>Verify that Storm is running by opening <a href="http://localhost:8080/">http://localhost:8080/</a> in a browser.</p>

<h3>Deploy the "Word Count" Topology</h3>

<p>Either build the <a href="https://github.com/nathanmarz/storm-starter">storm-starter</a> project from source, or <a href="https://dl.dropboxusercontent.com/s/kc933u6vz2crqkb/storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar">download a pre-built jar</a></p>

<p>Deploy the Word Count topology to your local cluster with the <code>storm jar</code> command:</p>

<pre><code>&gt; storm jar storm-starter-0.0.1-SNAPSHOT-jar-with-dependencies.jar storm.starter.WordCountTopology WordCount -c nimbus.host=localhost
</code></pre>

<p>If you reload the Storm UI page, you should now see the "WordCount" topology listed and can click on the link to verify that the topology is processing data.</p>
]]></content>
  </entry>
  
</feed>
